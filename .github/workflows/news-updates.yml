name: News Updates (30min)

on:
  schedule:
    # Run every 30 minutes
    - cron: '*/30 * * * *'
  workflow_dispatch: # Allow manual trigger
    inputs:
      cleanup_days:
        description: 'Delete news older than X days'
        required: false
        default: '7'

jobs:
  update-news:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create data directories
      run: |
        mkdir -p data/news
        mkdir -p public/data
    
    - name: Scrape latest news
      env:
        APPWRITE_API_KEY: ${{ secrets.APPWRITE_API_KEY }}
        NEXT_PUBLIC_APPWRITE_ENDPOINT: ${{ secrets.NEXT_PUBLIC_APPWRITE_ENDPOINT }}
        NEXT_PUBLIC_APPWRITE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_APPWRITE_PROJECT_ID }}
        NEXT_PUBLIC_APPWRITE_DB_ID: ${{ secrets.NEXT_PUBLIC_APPWRITE_DB_ID }}
        NEXT_PUBLIC_APPWRITE_NEWS_COL_ID: ${{ secrets.NEXT_PUBLIC_APPWRITE_NEWS_COL_ID }}
      run: npm run scrape:news
      continue-on-error: true
    
    - name: Clean old news
      env:
        APPWRITE_API_KEY: ${{ secrets.APPWRITE_API_KEY }}
        NEXT_PUBLIC_APPWRITE_ENDPOINT: ${{ secrets.NEXT_PUBLIC_APPWRITE_ENDPOINT }}
        NEXT_PUBLIC_APPWRITE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_APPWRITE_PROJECT_ID }}
        NEXT_PUBLIC_APPWRITE_DB_ID: ${{ secrets.NEXT_PUBLIC_APPWRITE_DB_ID }}
        NEXT_PUBLIC_APPWRITE_NEWS_COL_ID: ${{ secrets.NEXT_PUBLIC_APPWRITE_NEWS_COL_ID }}
      run: npm run clean:old-news
      continue-on-error: true
    
    - name: Build news index
      run: npm run build-index
      if: success() || failure()
    
    - name: Send notification (on failure)
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          console.log(`News update failed at ${new Date().toISOString()}`)
          // Could integrate with Discord/Slack webhook here
